#
# HITACHI VANTARA PROPRIETARY AND CONFIDENTIAL
#
#  Copyright 2021 Hitachi Vantara. All rights reserved.
#
# NOTICE: All information including source code contained herein is, and
# remains the sole property of Hitachi Vantara and its licensors. The intellectual
# and technical concepts contained herein are proprietary and confidential
# to, and are trade secrets of Hitachi Vantara and may be covered by U.S. and foreign
# patents, or patents in process, and are protected by trade secret and
# copyright laws. The receipt or possession of this source code and/or related
# information does not convey or imply any rights to reproduce, disclose or
# distribute its contents, or to manufacture, use, or sell anything that it
# may describe, in whole or in part. Any reproduction, modification, distribution,
# or public display of this information without the express written authorization
# from Hitachi Vantara is strictly prohibited and in violation of applicable laws and
# international treaties. Access to the source code contained herein is strictly
# prohibited to anyone except those individuals and entities who have executed
# confidentiality and non-disclosure agreements or other agreements with Hitachi Vantara,
# explicitly covering such access.
#
openapi: "3.0.0"
info:
  title: CSRF REST API
  version: 1.0.0

servers:
  - url: http://localhost:8080/v1

paths:
  /csrf/token:
    get:
      operationId: get-token
      summary: Obtains a CSRF token for calling protected services.
      responses:
        '204':
          description: Successful response.
          headers:
            X-CSRF-HEADER:
              description: |
                The name of the request header on which the CSRF token should be sent on requests
                to protected services.
              schema:
                type: string

            X-CSRF-PARAM:
              description: |
                The name of the request parameter on which the CSRF token should be sent on requests
                to protected services. It is preferable to use a request header to send the CSRF token,
                if possible.
              schema:
                type: string

            X-CSRF-TOKEN:
              description: The CSRF token.
              schema:
                type: string
        '400':
          description: Invalid parameters.
